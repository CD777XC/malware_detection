# Importing libraries
import numpy as np
from sklearn.pipeline import make_pipeline
from sklearn.model_selection import train_test_split, GridSearchCV, RandomizedSearchCV, cross_validate
from sklearn.metrics import precision_score
from sklearn.ensemble import RandomForestClassifier

import time

from preproc import preproc_pipe, X, y
from features_select import start

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=.3, random_state=42)

model = RandomForestClassifier(max_depth=50, n_estimators=577)

# model = RandomForestClassifier(
#     criterion='log_loss',
#     max_depth=40,
#     n_estimators=894)

pipe = make_pipeline(
    preproc_pipe,
    model
)


# n_estimators = [int(x) for x in np.linspace(start = 50, stop = 1000, num = 10)]

# max_depth = [int(x) for x in np.linspace(10, 110, num = 11)]

# max_features = ['auto', 'sqrt']

# min_samples_split = [2, 5, 10]

# min_samples_leaf = [1, 2, 4]

# criterion = ['gini', 'entropy', 'log_loss']

# params = {'randomforestclassifier__n_estimators': n_estimators,
#            'randomforestclassifier__max_features': max_features,
#            'randomforestclassifier__criterion': criterion,
#            'randomforestclassifier__max_depth': max_depth,
#            'randomforestclassifier__min_samples_split': min_samples_split,
#            'randomforestclassifier__min_samples_leaf': min_samples_leaf}


# grid = RandomizedSearchCV(
#     estimator=pipe,
#     param_distributions=params,
#     cv=10,
#     n_jobs=-1,
#     scoring=['accuracy', 'precision', 'r2'],
#     n_iter=200,
#     refit='precision',
#     verbose=1
# )

# print(f'''{5*"#"} Random Search CV ⚙️ {5*"#"}''')

# grid.fit(X=X_train, y=y_train)
# print(grid.best_estimator_)

pipe.fit(X_train, y_train)

y_pred = pipe.predict(X_test)
precision = precision_score(y_true=y_test, y_pred=y_pred)

end = time.time()

print(f'Score: {pipe.score(X_test, y_test):.4f}')
print(f'Precision: {precision:.4f}')
print('---- %s seconds ----' %(round(end - start, 2)))
